"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""

"""
Monkey-patch macholib to fix "dyld_find() got an unexpected keyword argument 'loader'".

Add 'import macholib_patch' to the top of set_py2app.py 
"""

import macholib
print("~"*60 + "macholib verion: "+macholib.__version__)
if macholib.__version__ <= "1.7":
    print("Applying macholib patch...")
    import macholib.dyld
    import macholib.MachOGraph
    dyld_find_1_7 = macholib.dyld.dyld_find
    def dyld_find(name, loader=None, **kwargs):
        #print("~"*60 + "calling alternate dyld_find")
        if loader is not None:
            kwargs['loader_path'] = loader
        return dyld_find_1_7(name, **kwargs)
    macholib.MachOGraph.dyld_find = dyld_find
"""
End monkey-patch
"""

from setuptools import setup

APP = ['main.py']
DATA_FILES = ['file.png', 'logo.png', 'x_icon.png', 'preference_data.json']
OPTIONS = {
    'argv_emulation': True,
    'iconfile': 'logo.icns',
    'packages': ['PIL', 'PyQt5', 'rippletagger', 'wordcloud'],
    'plist': {
        'CFBundleName': 'Scandinavian Topic Modeler',
        'CFBundleShortVersionString': '1.0.3',
        'CFBundleVersion': '1.0.3',
        'CFBundleIdentifier': 'org.nordicdh.topic.modeler',
        'NSHumanReadableCopyright': 'Â©Brigham Young University 2017',
        'CFBundleDevelopmentRegion': 'English'
    }
}

setup(
    app=APP,
    data_files=DATA_FILES,
    options={'py2app': OPTIONS},
    setup_requires=['py2app'],
)
